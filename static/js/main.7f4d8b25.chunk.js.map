{"version":3,"sources":["components/SingleCard.jsx","App.jsx","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAqBeA,EAnBI,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAS9C,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBAAKF,UAAU,OAAOC,IAAI,mCAAmCC,IAAI,YAAYC,QAXnE,WACXJ,GACDF,EAAaD,YCFnBQ,EAAa,CACjB,CAAE,IAAO,sCAAuCC,SAAS,GACzD,CAAE,IAAO,sCAAuCA,SAAS,GACzD,CAAE,IAAO,oCAAqCA,SAAS,GACvD,CAAE,IAAO,sCAAuCA,SAAS,GACzD,CAAE,IAAO,sCAAuCA,SAAS,GACzD,CAAE,IAAO,qCAAsCA,SAAS,IA2F3CC,MAxFf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAGMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACYe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAA1B,GAAI,kCAAUA,GAAV,IAAgB2B,GAAIH,KAAKC,cAElCR,EAAa,MACbE,EAAa,MAEbN,EAASS,GACTP,EAAS,IAG/Da,qBAAU,WAEJZ,GAAaE,IACfE,GAAY,GAERJ,EAAUX,MAAQa,EAAUb,KAC9BQ,GAAS,SAAAgB,GACP,OAAOA,EAAUH,KAAI,SAAA1B,GACnB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAIL,GAAX,IAAiBS,SAAS,IAEnBT,QAIb8B,KAGAC,WAAWD,EAAW,QAIzB,CAACd,EAAWE,IAGfU,qBAAU,WACRP,MACC,IAGL,IAAMpB,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAI1C8B,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAiB,GAAS,OAAIA,EAAY,KAClCZ,GAAY,IAKZ,OACE,sBAAKhB,UAAU,MAAf,UACE,4CACA,wBAAQG,QAASc,EAAjB,sBAEA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAA1B,GAAI,OACb,cAAC,EAAD,CACYA,KAAMA,EAENC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAHLH,EAAK2B,SAO1B,wCAAWb,SC3FjBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7f4d8b25.chunk.js","sourcesContent":["import './SingleCard.css'\r\n\r\nconst SingleCard = ({card, handleChoice, flipped, disabled}) => {\r\n\r\n    const handleClick = () => {\r\n        if (!disabled) {\r\n            handleChoice(card)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className={flipped ? \"flipped\" : \"\"}>\r\n              <img className=\"front\" src={card.src} alt=\"card front\" />\r\n              <img className=\"back\" src=\"/react_memory_game/img/cover.png\" alt=\"card back\" onClick={handleClick}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleCard","import { useState, useEffect } from 'react'\r\nimport './App.css'\r\nimport SingleCard from './components/SingleCard'\r\n\r\nconst cardImages = [\r\n  { \"src\": \"/react_memory_game/img/helmet-1.png\", matched: false },\r\n  { \"src\": \"/react_memory_game/img/potion-1.png\", matched: false },\r\n  { \"src\": \"/react_memory_game/img/ring-1.png\", matched: false },\r\n  { \"src\": \"/react_memory_game/img/scroll-1.png\", matched: false },\r\n  { \"src\": \"/react_memory_game/img/shield-1.png\", matched: false },\r\n  { \"src\": \"/react_memory_game/img/sword-1.png\", matched: false },\r\n]\r\n\r\nfunction App() {\r\n\r\n  const [cards, setCards] = useState([])\r\n  const [turns, setTurns] = useState(0)\r\n\r\n  const [choiceOne, setChoiceOne] = useState(null)\r\n  const [choiceTwo, setChoiceTwo] = useState(null)\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  //shuffle cards\r\n  const shuffleCards = () => {\r\n    const shuffledCards = [...cardImages, ...cardImages]\r\n                                                        .sort(() => Math.random() - 0.5) //to randomize the deck\r\n                                                        .map(card => ( {...card, id: Math.random() }))\r\n\r\n                                                        setChoiceOne(null)\r\n                                                        setChoiceTwo(null)\r\n\r\n                                                        setCards(shuffledCards)\r\n                                                        setTurns(0)\r\n  }\r\n  //compare two selected cards\r\n  useEffect(() => {\r\n    \r\n    if (choiceOne && choiceTwo) {\r\n      setDisabled(true)\r\n\r\n      if (choiceOne.src === choiceTwo.src) {\r\n        setCards(prevCards => {\r\n          return prevCards.map(card => {\r\n            if (card.src === choiceOne.src) {\r\n              return {...card, matched: true}\r\n            } else {\r\n              return card\r\n            }\r\n          }) \r\n        })\r\n        resetTurn()     \r\n      }\r\n      else {\r\n        setTimeout(resetTurn, 1000 )            \r\n      }\r\n    }\r\n    \r\n  }, [choiceOne, choiceTwo])\r\n\r\n  //start a new game automatically\r\n  useEffect(() => {\r\n    shuffleCards()\r\n  }, [])\r\n\r\n//handle a choice\r\nconst handleChoice = (card) => {\r\n  choiceOne ? setChoiceTwo(card) : setChoiceOne(card)  \r\n}\r\n\r\n//reset choices and increase turn\r\nconst resetTurn = () => {\r\n  setChoiceOne(null)\r\n  setChoiceTwo(null)\r\n  setTurns(prevTurns => prevTurns + 1)\r\n  setDisabled(false)\r\n} \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Magic Math</h1>\r\n      <button onClick={shuffleCards}>New Game</button>\r\n\r\n      <div className=\"card-grid\">\r\n        {cards.map(card => (\r\n          <SingleCard \r\n                      card={card} \r\n                      key={card.id} \r\n                      handleChoice={handleChoice} \r\n                      flipped={card === choiceOne || card === choiceTwo || card.matched}\r\n                      disabled={disabled}\r\n          />\r\n        ))}\r\n      </div>\r\n      <p>Turns: {turns}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}